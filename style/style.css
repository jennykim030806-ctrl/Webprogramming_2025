html,
body {
  margin: 0;
  height: 100%;
  background: #000;
}
/* ================================ 배경 ================================ */
.background {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: auto;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  object-fit: cover;
  z-index: 1;
}
/* ================================ 갈대 ================================ */
/* ① 창(뷰포트) 역할: 여기서만 자르고, 내부는 마음껏 넘치게 */
.reed-wrap {
  position: fixed;
  left: 0;
  bottom: -25px;
  width: 100vw;
  height: 100vh; /* 갈대 세로 크기: 40~60vh 사이에서 조절 */
  overflow: hidden; /* ★ 화면 밖으로 넘친 부분은 여기서 숨김 */
  z-index: 10; /* 배경(1) < 캐릭터(2) < 갈대(4) < 로고(5) */
  pointer-events: none;
} /* ② 실제 갈대 이미지(큰 여유로 깔고, 하단 기준으로 스윙) */

.reed-img {
  position: absolute;
  bottom: -10px;
  left: 50%; /* 화면 밖으로 충분히 넘치게(bleed) */
  width: 120vw; /* 좌우 여유: 110~150vw 사이에서 조절 */
  height: 55vh; /* 비율 유지 */
  transform: translateX(-50%) scale(1.05); /* 중앙 정렬 + 약간 확대 */
  transform-origin: 50% 100%; /* 하단 중심 축으로 휘기 */
  will-change: transform;
  animation: reedSway 6.8s linear infinite;
  filter: url(#windSoft);
  will-change: transform, filter;
}

@keyframes reedSway {
  0% {
    transform: translateX(calc(-50% - 2.6vw)) rotate(-3deg) scale(1.05);
  } /* 왼쪽 강하게 시작 */
  15% {
    transform: translateX(calc(-50% - 3.2vw)) rotate(-3.6deg) scale(1.05);
  } /* 왼쪽 끝까지 휘기 */
  35% {
    transform: translateX(calc(-50% + -2vw)) rotate(-2deg) scale(1.05);
  } /* 오른쪽 아주 살짝 */
  55% {
    transform: translateX(calc(-50% - 3vw)) rotate(-3.4deg) scale(1.05);
  } /* 다시 왼쪽, 오래 유지 */
  80% {
    transform: translateX(calc(-50% - 3.4vw)) rotate(-3.8deg) scale(1.05);
  } /* 왼쪽 최대치 유지 */
  90% {
    transform: translateX(calc(-50% + -2vw)) rotate(-2deg) scale(1.05);
  } /* 오른쪽 짧게 되돌림 */
  100% {
    transform: translateX(calc(-50% - 2.6vw)) rotate(-3deg) scale(1.05);
  } /* 다시 왼쪽으로 */
}

.reed-img3 {
  position: fixed;
  bottom: -35px;
  left: 60%;
  width: 30vw;
  height: auto;
  z-index: 11;
  transform-origin: center bottom;
  animation: leaf-rotate 4s infinite alternate;
  pointer-events: none;
}

.reed-img3.left-70 {
  left: 70%;
  width: 36vw;
  filter: blur(0.1px);
}

.reed-img3.left-20 {
  left: 20%;
  width: 14vw;
}
.reed-img3.left-30 {
  left: 30%;
  width: 14vw;
  filter: blur(0.5px);
}

.reed-img3.left-40 {
  left: 40%;
  width: 20vw;
}
.reed-img3.left-50 {
  left: 50%;
  width: 30vw;
  filter: blur(0.5px);
}

.delay-25 {
  animation-delay: 2.5s;
}
.delay-10 {
  animation-delay: 1s;
}
.delay-5 {
  animation-delay: 0.5s;
}

@keyframes leaf-rotate {
  0% {
    transform: rotate(-10deg);
  }
  100% {
    transform: rotate(10deg);
  }
}

/* ================================ 캐릭터 ================================ */
.character {
  --char-scale: 1;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translate(-45%, -5%) scale(var(--char-scale));
  height: 90vh;
  width: auto;
  z-index: 7;
  pointer-events: none;
  display: block;

  transition: transform 0.5s ease, left 0.5s ease, width 0.5s ease;
  transform-origin: bottom center;
}
/* ================================ 캐릭터 히트박스 ================================ */
.character-hitbox {
  position: fixed;
  bottom: 20px;
  left: 40%;
  transform: translate(-45%, -5%) scale(var(--logo-scale));
  width: 20vw; /* 캐릭터 실제 몸통 크기에 맞춰 조절 */
  height: 64vh;
  z-index: 50; /* 캐릭터 위로 */
  cursor: pointer;
  background: rgba(255, 255, 255, 0); /* 완전 투명 */
}

/* 호버 전용 클래스: 포커스 아닐 때만 확대 */
.character.is-hover:not(.focus) {
  --char-scale: 1.1;
  transition: transform 0.7s;
}

/* ================================ 로고 ================================ */
.logo {
  --logo-scale: 1;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translate(-50%, -5%) scale(var(--logo-scale));
  height: 80vh;
  width: auto;
  z-index: 20;
  pointer-events: none;
  display: block;

  transition: transform 0.5s ease, width 0.5s ease;
  transform-origin: center bottom;
}
/* 호버 때만 살짝 줄이기(포커스 아닐 때만) */
.logo.is-hover:not(.focus) {
  --logo-scale: 0.8;
  transition: transform 0.7s;
}
/* ================================ 낙엽 ================================ */
.leaf-stream {
  position: fixed;
  top: -90vh;
  right: -90vw;
  width: 100vw;
  height: auto;
  z-index: 3;
  pointer-events: none;
  will-change: transform, opacity;
  animation: leaf-sway var(--dur, 22s) linear var(--ad, 0s) 1 both,
    leaf-fade var(--dur, 22s) linear var(--ad, 0s) 1 both;
} /* 좌우 스웨이 + 하강을 동시에 처리 */
@keyframes leaf-sway {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  15% {
    transform: translate(-25vw, 20vh) rotate(-5deg);
  }
  30% {
    transform: translate(-55vw, 45vh) rotate(8deg);
  }
  50% {
    transform: translate(-95vw, 80vh) rotate(-5deg);
  }
  70% {
    transform: translate(-140vw, 115vh) rotate(8deg);
  }
  85% {
    transform: translate(-180vw, 145vh) rotate(-5deg);
  }
  100% {
    transform: translate(-210vw, 170vh) rotate(8deg);
  }
} /* 투명도 페이드 인/아웃 (이전 버전 그대로 사용) */
@keyframes leaf-fade {
  0% {
    opacity: 0;
  }
  6% {
    opacity: 0;
  }
  12% {
    opacity: 1;
  }
  88% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* ================================ 화면 덮개 ================================ */
.screen-dim {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6); /* 반투명 검정 */
  opacity: 0;
  pointer-events: none;
  z-index: 900;
  transition: opacity 0.4s ease;
}
.screen-dim.show {
  opacity: 1;
  pointer-events: auto;
}

/* ================================ 캐릭터 이동 효과 ================================ */
/* 기존 .character는 그대로 두고, .focus가 붙을 때만 이동 */
.character.focus {
  left: 5%;
  transform: translate(-10%, -5%) scale(1);
  z-index: 1001; /* 덮개 위로 */
  transition: transform 1s ease, left 1s ease;
}

/* ================================ 로고 이동 효과 ================================ */
/* 기본 로고 상태는 그대로 두고, .logo.focus가 붙을 때만 변화 */
.logo.focus {
  z-index: 1002; /* 캐릭터(1001)보다 위, dim보다 위 */
  transform: translate(-20%, -44%) scale(0.8); /* 오른쪽으로 이동 + 살짝 축소 */
  transition: transform 1s ease, z-index 0s linear;
}

/* 게임 정보 박스를 '세로 플렉스'로: 각 요소 사이 간격은 gap으로 관리 */
.game-info {
  position: fixed;
  right: 6%;
  bottom: 13vh;
  width: 40vw;
  max-width: 560px;
  color: #fff;
  z-index: 1003;
  text-align: left;

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 10px; /* 로고-텍스트-버튼 간 기본 간격 */

  opacity: 0;
  transform: translateY(8px);
  pointer-events: none;
  transition: opacity 1s ease, transform 1s ease;
}
.game-info.open {
  opacity: 1;
  transform: translateY(0);
  pointer-events: auto;
}

/* ✅ 로고: 고정해두지 말고 flow 안에서 배치 */
.sony-logo {
  position: static; /* fixed 제거 */
  width: 260px; /* 필요하면 180~260px로 조절 */
  height: auto;
  display: block;
  margin-left: 125px;
  margin-bottom: 0px;
}

/* 시놉시스 폰트 키우기 + 줄간격 */
.synopsis {
  font-size: 20px;
  line-height: 1.7;
  color: #ddd;
  margin-top: -18px;
  margin-bottom: -10px;
  font-family: "Rubik Glitch", system-ui;
  font-weight: 400;
  font-style: normal;
}

/* 버튼 묶음을 더 아래로 내리고 싶다면 margin-top으로 추가 여백 주기 */
.link-buttons {
  display: flex;
  gap: 50px;
  flex-wrap: wrap;
  margin-top: 20px; /* ← 더 내리고 싶으면 16~24px로 키워줘 */
  margin-left: 50px;
}

/* 버튼 가독성 업 */
.btn {
  margin-left: 10px;
  font-size: 20px;
  padding: 10px 30px;
  border-radius: 30px;
  text-decoration: none;
  color: rgba(255, 255, 255, 1);
  background-color: rgba(255, 255, 255, 0.1);
  font-weight: 700;
  letter-spacing: 0.3px;
  transition: background 0.25s ease, border-color 0.25s ease,
    transform 0.1s ease;
}
.btn:hover {
  transform: translateY(-1px);
}
.btn.ps:hover {
  background: #0066cc;
  border-color: #0066cc;
}
.btn.steam:hover {
  background: #1b2838;
  border-color: #1b2838;
}

/* 이펙트 전용 레이어: 배경 위, 갈대(4)보다 살짝 위. 로고(6)와 UI보다 아래 */
/* 이펙트 레이어는 그대로, 필요하면 z-index를 5~101로 조절 */
.fx-layer {
  position: fixed;
  inset: 0;
  z-index: 5; /* 갈대보다 위에 두려면 101로 올려도 됨 */
  pointer-events: none;
}

/* 번개를 '화면 전체'로 꽉 채우기 */
.lightning-bolt {
  position: absolute;
  inset: 0; /* top:0;right:0;bottom:0;left:0 */
  width: 100%;
  height: 100%;
  object-fit: cover; /* 화면 비율에 맞춰 채우기(잘림 허용) */
  opacity: 0;
  mix-blend-mode: screen;
  filter: drop-shadow(0 0 10px #fff);
}

@keyframes bolt-flash {
  0% {
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  35% {
    opacity: 0.7;
  }
  60% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
.lightning-bolt.show {
  animation: bolt-flash 180ms steps(3, end) 1;
} /* 화면 전체 번쩍(선택 사항: 번개 순간 주위만 살짝 밝아짐) */
.flash-scrim {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: 1000;
  opacity: 0;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 30%),
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0) 60%
  );
}
@keyframes screen-flash {
  0% {
    opacity: 0;
  }
  15% {
    opacity: 0.45;
  }
  45% {
    opacity: 0.12;
  }
  100% {
    opacity: 0;
  }
}
.flash-scrim.show {
  animation: screen-flash 220ms ease-out 1;
}
